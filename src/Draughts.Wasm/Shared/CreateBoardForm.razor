@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

@code {
    private class BoardDto
    {
        [Required]
        [MinLength(3, ErrorMessage = "A board must have at least 3 characters long name!")]
        [MaxLength(20, ErrorMessage = "A board must have no more than 20 characters long name!")]
        public string Name { get; set; }
    }
    
    private readonly BoardDto _board = new() { Name = DateTime.Now.ToString("yyyy-M-d-HH-mm") };

    private string _error = null;
    
    private async Task HandleValidSubmit()
    {
        var result = await Http.PostAsJsonAsync("api/boards", _board);

        _error = null;
        if (!result.IsSuccessStatusCode)
        {
            _error = "Board already exists or the name isn't valid!";
        }
    }
}

<EditForm Model="_board" OnValidSubmit="async () => await HandleValidSubmit()">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary>
    </ValidationSummary>
    
    <label>
        Board:
        <InputText @bind-Value="_board.Name"></InputText>
    </label>
    
    <button type="submit">Submit</button>
    
    @if (_error is not null)
    {
        <p>@_error</p>
    }
</EditForm>